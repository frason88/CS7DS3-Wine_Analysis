geom_point() +
xlab('Mauna Loa Monthly CO2 PPM') +
ylab('Global Marine Surface Monthly CO2 PPM') +
ggtitle('Mauna Loa vs. Global Marine Surface CO2 Concentration')
combined_monthly <- inner_join(
global_monthly %>% select(date, co2ppm) %>% rename(co2ppm.gl = co2ppm),
mauna_loa_monthly %>% select(date, co2ppm) %>% rename(co2ppm.ml = co2ppm),
by = 'date'
)
ggplot(data = combined_monthly, aes(co2ppm.ml, co2ppm.gl)) +
geom_point() +
xlab('Mauna Loa Monthly CO2 PPM') +
ylab('Global Marine Surface Monthly CO2 PPM') +
ggtitle('Mauna Loa vs. Global Marine Surface CO2 Concentration')
law_dome <- read.table(
'ftp://ftp.ncdc.noaa.gov/pub/data/paleo/icecore/antarctica/law/law2006.txt',
skip = 182,
nrows = 2004,
header = TRUE
)
law_dome <- law_dome %>% select(YearAD.1, CO2spl) %>% rename(year = YearAD.1, co2ppm = CO2spl)
law_dome$co2ppm.inc <- c(NA, diff(law_dome$co2ppm))
summary(law_dome)
ggplot(data = law_dome, aes(year, co2ppm)) +
geom_line() +
xlab('Year') +
ylab('CO2 Concentration PPM') +
ggtitle('Law Dome Ice Core CO2 Concentration') +
scale_x_continuous(breaks = seq(0, 2000, 100)) +
theme(axis.text.x = element_text(angle = -45, vjust = 0.7))
ggplot(data = law_dome, aes(year, co2ppm)) +
geom_line() +
xlab('Year') +
ylab('CO2 Concentration PPM') +
ggtitle('Law Dome Ice Core CO2 Concentration') +
scale_x_continuous(breaks = seq(0, 2020, 100)) +
theme(axis.text.x = element_text(angle = -45, vjust = 0.7))
mauna_loa_weekly <- mauna_loa_weekly[,c(1,2,3,5)]
head(mauna_loa_weekly)
head(mauna_loa_weekly)
head(mauna_loa_weekly)
mauna_loa_weekly <- read.table('ftp://aftp.cmdl.noaa.gov/products/trends/co2/co2_weekly_mlo.txt')
head(mauna_loa_weekly)
#Preparing the Data
mauna_loa_weekly <- mauna_loa_weekly[, c(1, 2, 3, 5)]
head(mauna_loa_weekly)
names(mauna_loa_weekly) <- c('year', 'month', 'day', 'co2ppm')
head(mauna_loa_weekly)
mauna_loa_weekly$date <- as.Date(paste(mauna_loa_weekly$year, mauna_loa_weekly$month, mauna_loa_weekly$day, sep = '-'), format = '%Y-%m-%d')
mauna_loa_weekly <- mauna_loa_weekly[, c('date', 'co2ppm')]
head(mauna_loa_weekly)
summary(mauna_loa_weekly)
mauna_loa_weekly[mauna_loa_weekly$co2ppm == -999.99, ]$co2ppm = NA
summary(mauna_loa_weekly)
plot(
mauna_loa_weekly$date,
mauna_loa_weekly$co2ppm,
type = 'l',
xlab = 'Date',
ylab = 'CO2 Concentration PPM',
main = 'Mauna Loa Weekly Carbon Dioxide Concentration'
)
mauna_loa_weekly[mauna_loa_weekly$co2ppm == -999.99, ]$co2ppm = NA
head(mauna_loa_weekly)
mauna_loa_weekly[mauna_loa_weekly$co2ppm == -999.99, ]$co2ppm = NA
mauna_loa_weekly[mauna_loa_weekly$co2ppm == -999.99, ]$co2ppm = NA
summary(mauna_loa_weekly)
mauna_loa_weekly[mauna_loa_weekly$co2ppm == -999.99, ]$co2ppm = NA
summary(mauna_loa_weekly)
head(mauna_loa_weekly)
mauna_loa_weekly[mauna_loa_weekly$co2ppm == -999.99, ]$co2ppm = NA
plot(
mauna_loa_weekly$date,
mauna_loa_weekly$co2ppm,
type = 'l',
xlab = 'Date',
ylab = 'CO2 Concentration PPM',
main = 'Mauna Loa Weekly Carbon Dioxide Concentration'
)
trend <- lm(mauna_loa_weekly$co2ppm ~ mauna_loa_weekly$date)
summary(trend)
plot(
mauna_loa_weekly$date,
mauna_loa_weekly$co2ppm,
type = 'l',
xlab = 'Date',
ylab = 'CO2 Concentration PPM',
main = 'Mauna Loa Weekly Carbon Dioxide Concentration'
)
abline(trend, col = 'dark blue')
if(!require(lubridate)) {
install.packages('lubridate')
library(lubridate)
}
if(!require(dplyr)) {
install.packages('dplyr')
library(dplyr)
}
mauna_loa_weekly %>% subset(year(date) == 2020) %>% head()
mauna_loa_weekly %>% subset(year(date) == 2015) %>% tail()
mauna_loa_weekly %>% subset(year(date) == 2020) %>% head()
mauna_loa_weekly %>% subset(year(date) == 2015) %>% tail()
mauna_loa_weekly %>% subset(year(date) == 2021) %>% head()
mauna_loa_weekly %>% subset(year(date) == 2020) %>% tail()
mauna_loa_weekly %>% subset(year(date) == 2020) %>% summary()
ggplot(data = mauna_loa_weekly %>% subset(year(date) == 2020), aes(date, co2ppm)) +
geom_line() +
xlab('Date') +
ylab('CO2 Concentration PPM') +
ggtitle('Mauna Loa Weekly Carbon Dioxide Concentration')
ggplot(data = mauna_loa_weekly %>% subset(year(date) == 2021), aes(date, co2ppm)) +
geom_line() +
xlab('Date') +
ylab('CO2 Concentration PPM') +
ggtitle('Mauna Loa Weekly Carbon Dioxide Concentration')
ggplot(data = mauna_loa_weekly %>% subset(year(date) == 2020), aes(date, co2ppm)) +
geom_line() +
xlab('Date') +
ylab('CO2 Concentration PPM') +
ggtitle('Mauna Loa Weekly Carbon Dioxide Concentration')
ggplot(data = mauna_loa_weekly %>% subset(year(date) == 2020,2021), aes(date, co2ppm)) +
geom_line() +
xlab('Date') +
ylab('CO2 Concentration PPM') +
ggtitle('Mauna Loa Weekly Carbon Dioxide Concentration')
ggplot(data = mauna_loa_weekly %>% subset(year(date) == 2020), aes(date, co2ppm)) +
geom_line() +
xlab('Date') +
ylab('CO2 Concentration PPM') +
ggtitle('Mauna Loa Weekly Carbon Dioxide Concentration')
mauna_loa_weekly %>% subset(year(date) == 2020) %>% head()
# Let
â€™s check when those maximum and minimum measurements were taken
mauna_loa_weekly %>% subset(year(date) == 2020) %>% subset(co2ppm == max(co2ppm))
mauna_loa_weekly %>% subset(year(date) == 2020) %>% subset(co2ppm == min(co2ppm))
ggplot(data = mauna_loa_weekly %>% subset(year(date) == 2021), aes(date, co2ppm)) +
geom_line() +
xlab('Date') +
ylab('CO2 Concentration PPM') +
ggtitle('Mauna Loa Weekly Carbon Dioxide Concentration')
ggplot(data = mauna_loa_weekly %>% subset(year(date) == 2021), aes(date, co2ppm)) +
geom_line() +
xlab('Date') +
ylab('CO2 Concentration PPM') +
ggtitle('Mauna Loa Weekly Carbon Dioxide Concentration 2021')
mauna_loa_weekly %>% subset(year(date) == 2021) %>% subset(co2ppm %in% c(min(co2ppm), max(co2ppm)))
mauna_loa_weekly$year <- year(mauna_loa_weekly$date)
mauna_loa_weekly$yday <- yday(mauna_loa_weekly$date)
head(mauna_loa_weekly)
tail(mauna_loa_weekly)
ggplot(data = mauna_loa_weekly, aes(yday, co2ppm, colour = year, group = year)) +
geom_line() +
xlab('Day of Year') +
ylab('CO2 Concentration PPM') +
ggtitle('Mauna Loa Weekly Carbon Dioxide Concentration') +
scale_color_gradientn('Year', colors = rainbow(length(unique(mauna_loa_weekly$year))))
mauna_loa_monthly <- read.table('ftp://aftp.cmdl.noaa.gov/products/trends/co2/co2_mm_mlo.txt')
mauna_loa_monthly <- mauna_loa_monthly[, c(1, 2, 5)]
names(mauna_loa_monthly) = c('year', 'month', 'co2ppm')
mauna_loa_monthly$date <- as.Date(paste(mauna_loa_monthly$year, mauna_loa_monthly$month, '01', sep = '-'), format = '%Y-%m-%d')
summary(mauna_loa_monthly)
ggplot(data = mauna_loa_monthly, aes(date, co2ppm)) +
geom_line() +
xlab('Date') +
ylab('CO2 Concentration PPM') +
ggtitle('Mauna Loa Monthly Carbon Dioxide Concentration') +
stat_smooth(method = lm, color = 'dark blue')
summary(mauna_loa_monthly)
ggplot(data = mauna_loa_monthly, aes(date, co2ppm)) +
geom_line() +
xlab('Date') +
ylab('CO2 Concentration PPM') +
ggtitle('Mauna Loa Monthly Carbon Dioxide Concentration') +
stat_smooth(method = lm, color = 'dark blue')
mauna_loa_yearly <- read.table('ftp://aftp.cmdl.noaa.gov/products/trends/co2/co2_annmean_mlo.txt')
names(mauna_loa_yearly) <- c('year', 'co2ppm', 'uncertainty')
head(mauna_loa_yearly)
ggplot(data = mauna_loa_yearly, aes(year, co2ppm)) +
geom_ribbon(data = mauna_loa_yearly, aes(ymin = co2ppm - uncertainty, ymax = co2ppm + uncertainty), alpha=0.3) +
geom_line() +
xlab('Date') +
ylab('CO2 Concentration PPM') +
ggtitle('Mauna Loa Yearly Carbon Dioxide Concentration')
mauna_loa_yearly$co2ppm.inc <- c(NA, diff(mauna_loa_yearly$co2ppm))
summary(mauna_loa_yearly)
mauna_loa_yearly %>% na.omit() %>% subset(co2ppm.inc %in% c(min(co2ppm.inc), max(co2ppm.inc)))
ggplot(data = mauna_loa_yearly, aes(year, co2ppm.inc)) +
geom_line() +
xlab('Year') +
ylab('Change in CO2 Concentration PPM') +
ggtitle('Mauna Loa Annual Increase in CO2 Concentration') +
stat_smooth(method = lm, color = 'dark blue') +
scale_x_continuous(breaks = seq(1960, 2020, 10)) +
theme(axis.text.x = element_text(angle = 0, vjust = 0.7))
law_dome <- read.table(
'ftp://ftp.ncdc.noaa.gov/pub/data/paleo/icecore/antarctica/law/law2006.txt',
skip = 182,
nrows = 2004,
header = TRUE
)
law_dome <- law_dome %>% select(YearAD.1, CO2spl) %>% rename(year = YearAD.1, co2ppm = CO2spl)
law_dome$co2ppm.inc <- c(NA, diff(law_dome$co2ppm))
summary(law_dome)
theme(axis.text.x = element_text(angle = -45, vjust = 0.7)
ggplot(data = law_dome, aes(year, co2ppm)) +
theme(axis.text.x = element_text(angle = -45, vjust = 0.7)
#Importing library
library(dplyr)
library(magrittr)
library(knitr)
#Importing library
library(dplyr)
law_dome <- law_dome %>% select(YearAD.1, CO2spl) %>% rename(year = YearAD.1, co2ppm = CO2spl)
law_dome <- law_dome %>% select(YearAD, CO2spl) %>% rename(year = YearAD.1, co2ppm = CO2spl)
law_dome <- law_dome %>% select(YearAD, CO2spl) %>% rename(year = YearAD, co2ppm = CO2spl)
law_dome <- read.table(
'ftp://ftp.ncdc.noaa.gov/pub/data/paleo/icecore/antarctica/law/law2006.txt',
skip = 182,
nrows = 2004,
header = TRUE
)
law_dome <- law_dome %>% select(YearAD, CO2spl) %>% rename(year = YearAD, co2ppm = CO2spl)
law_dome$co2ppm.inc <- c(NA, diff(law_dome$co2ppm))
summary(law_dome)
theme(axis.text.x = element_text(angle = -45, vjust = 0.7)
ggplot(data = law_dome, aes(year, co2ppm)) +
ggplot(data = law_dome, aes(year, co2ppm)) +
ggplot(data = law_dome, aes(year, co2ppm)) +
xlab('Year') +
\
ggplot(data = law_dome, aes(year, co2ppm)) +
geom_line() +
xlab('Year') +
ylab('CO2 Concentration PPM') +
ggtitle('Law Dome Ice Core CO2 Concentration') +
scale_x_continuous(breaks = seq(0, 2000, 100)) +
theme(axis.text.x = element_text(angle = -45, vjust = 0.7)
)
ggplot(data = law_dome, aes(year, co2ppm.inc)) +
geom_line() +
xlab('Year of Common Era') +
ylab('Change in CO2 Concentration PPM') +
ggtitle('Law Dome Ice Core CO2 Concentration Annual Rate of Change') +
scale_x_continuous(breaks = seq(0, 2000, 100)) +
theme(axis.text.x = element_text(angle = -45, vjust = 0.7))
summary(law_dome %>% subset(year <= 1400))
ggplot(data = law_dome %>% subset(year>= 1750), aes(year, co2ppm.inc)) +
geom_line() +
xlab('Year of Common Era') +
ylab('Change in CO2 Concentration PPM') +
ggtitle('Law Dome Ice Core CO2 Concentration Annual Rate of Change') +
scale_x_continuous(breaks = seq(1700, 2000, 10)) +
theme(axis.text.x = element_text(angle = -45, vjust = 0.7))
dome_c <- read.table(
'ftp://ftp.ncdc.noaa.gov/pub/data/paleo/icecore/antarctica/domec/domec_co2.txt',
skip = 11
)
names(dome_c) <- c('depth_m', 'before_1950', 'co2ppm', 'uncertainty')
dome_c$year <- 1950 - dome_c$before_1950
summary(dome_c)
composite <- read.table(
'https://www1.ncdc.noaa.gov/pub/data/paleo/icecore/antarctica/antarctica2015co2composite.txt',
skip = 138
)
names(composite) <- c('years_before_present', 'co2ppm', 'uncertainty')
composite$year <- 1950 - composite$years_before_present
summary(composite)
summary(dome_c)
ggplot(data = dome_c, aes(year, co2ppm)) +
geom_line() +
xlab('Years Before Common Era') +
ylab('CO2 Concentration PPM') +
ggtitle('Dome C Ice Core CO2 Concentration') +
scale_x_continuous(breaks = seq(-20000, 0, 1000), labels = scales::comma) +
theme(axis.text.x = element_text(angle = -45, vjust = 0.7))
composite <- read.table(
'https://www1.ncdc.noaa.gov/pub/data/paleo/icecore/antarctica/antarctica2015co2composite.txt',
skip = 138
)
names(composite) <- c('years_before_present', 'co2ppm', 'uncertainty')
composite$year <- 1950 - composite$years_before_present
summary(composite)
ggplot(data = composite, aes(year, co2ppm)) +
geom_line() +
xlab('Years Before Common Era') +
ylab('CO2 Concentration PPM') +
ggtitle('Composite Ice Core CO2 Concentration') +
scale_x_continuous(breaks = seq(-800000, 2000, 50000), labels = scales::comma) +
theme(axis.text.x = element_text(angle = -45, vjust = 0.7))
q()
5 + 5
## Not run:
#' ## Load required packages
require(ggplot2)
## Not run:
#' ## Load required packages
require(ggplot2)
require(scales)
require(gridExtra)
#' ## plot path of troops, and another layer for city names
plot_troops <- ggplot(Minard.troops, aes(long, lat)) +
geom_path(aes(size = survivors, colour = direction, group = group),
lineend = "round", linejoin = "round")
runplot_cities <- geom_text(aes(label = city), size = 4, data = Minard.cities)
## Not run:
#' ## Load required packages
require(ggplot2)
run all
## Not run:
#' ## Load required packages
require(ggplot2)
## Not run:
#' ## Load required packages
require(ggplot2)
setwd("~/Applied-Stats-Wine-23333313")
library(tidyverse)
library(brms)
library(rstan)
library(lattice)
library(plotly)
library(ggplot2)
library(lme4)
library(brms)
library(rstan)
library(lattice)
library(plotly)
library(ggplot2)
library(lme4)
# Read the data
wine_data <- read.csv("wine_review.csv")
# Explore the data
summary(wine_data)
str(wine_data)
# Visualize the distribution of rating points across wine varieties
ggplot(wine_data, aes(x = variety, y = points, fill = variety)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "Wine Variety", y = "Rating Points", title = "Distribution of Rating Points by Wine Variety")
# Fit a multiple linear regression model with grouping structure and random slopes
model <- brm(points ~ price + Finish + Rich + Fruit + (1 + price | variety),
data = wine_data, family = gaussian(),
prior = c(prior(normal(0, 10), class = Intercept),
prior(normal(0, 5), class = b)),
iter = 2000, warmup = 1000, chains = 4, cores = 4)
# Summarize the model results
summary(model)
# Extract the fixed effects coefficients
fixed_effects <- fixef(model)
fixed_effects
# Extract the random effects coefficients
random_effects <- ranef(model)
random_effects
# Calculate the marginal effects of price on rating points for each wine variety
conditional_effects <- conditional_effects(model, "price")
# Calculate error metrics
actual_points <- wine_data$points
predicted_points <- fitted(model)
# R-squared
r_squared <- cor(actual_points, predicted_points)^2
# Average Error
average_error <- mean(actual_points - predicted_points)
# Mean Squared Error
mse <- mean((actual_points - predicted_points)^2)
# Median Absolute Error
mae <- median(abs(actual_points - predicted_points))
# Root Mean Squared Error
rmse <- sqrt(mse)
# Print error metrics
cat("Error Metrics:\n")
cat("R-squared:", r_squared, "\n")
cat("Average Error:", average_error, "\n")
cat("Mean Squared Error:", mse, "\n")
cat("Median Absolute Error:", mae, "\n")
cat("Root Mean Squared Error:", rmse, "\n")
# Extract the random effects coefficients
random_effects <- ranef(model)
random_effects
# Check model diagnostics
plot(model)
# Perform posterior predictive checks
pp_check(model)
print(pp_check)
# Perform posterior predictive checks
pp_check_result <- pp_check(model)
print(pp_check_result)
# Install the necessary packages if not already installed
if (!require("dplyr")) install.packages("dplyr")
if (!require("networkD3")) install.packages("networkD3")
# Load the required libraries
library(dplyr)
library(networkD3)
# Load your data
wine_data <- read.csv("path_to_your_file.csv")  # Replace with the path to your dataset
# Load your data
wine_data <- read.csv("wine_review.csv")  # Replace with the path to your dataset
# Prepare the data for the Sankey diagram
variety_analysis <- wine_data %>%
group_by(variety, points) %>%
summarise(count = n(),
superior_count = sum(superior_rating, na.rm = TRUE),
.groups = 'drop')
# Load your data
wine_data <- read.csv("wine_review.csv")  # Replace with the path to your dataset
# Prepare the data for the Sankey diagram
variety_analysis <- wine_data %>%
group_by(variety, points) %>%
summarise(count = n(),
superior_count = sum(superior_rating, na.rm = TRUE),
.groups = 'drop')
# Create nodes for Sankey Diagram
varieties <- unique(variety_analysis$variety)
points <- unique(variety_analysis$points)
nodes <- data.frame(name=c(as.character(varieties), as.character(points), "Not Superior", "Superior"))
# Create links for Sankey Diagram
variety_links <- variety_analysis %>%
mutate(source = match(variety, nodes$name) - 1,
target = match(points, nodes$name) - 1,
value = count)
rating_links <- variety_analysis %>%
mutate(source = match(points, nodes$name) - 1,
target = ifelse(superior_count > 0, which(nodes$name == "Superior") - 1, which(nodes$name == "Not Superior") - 1),
value = count)
links <- rbind(variety_links, rating_links)
# Create Sankey diagram
sankey <- sankeyNetwork(Links = links, Nodes = nodes, Source = "source", Target = "target", Value = "value", NodeID = "name", units = "Tastings", fontSize = 12, nodeWidth = 30)
print(sankey)
# Prepare the data for the Sankey diagram
variety_analysis <- wine_data %>%
group_by(variety, points) %>%
summarise(count = n(),
superior_count = sum(superior_rating, na.rm = TRUE),
.groups = 'drop')
# Create nodes for Sankey Diagram
varieties <- unique(variety_analysis$variety)
points <- as.character(unique(variety_analysis$points))
labels <- c(varieties, points, "Not Superior", "Superior")
nodes <- data.frame(name = labels)
# Map indices for source and target
variety_indices <- match(varieties, labels) - 1
points_indices <- match(points, labels) - 1
superior_index <- which(labels == "Superior") - 1
not_superior_index <- which(labels == "Not Superior") - 1
# Create links for Sankey Diagram
links <- data.frame(
source = c(rep(variety_indices, each = length(points_indices)), rep(points_indices, each = 2)),
target = c(rep(points_indices, times = length(variety_indices)), rep(c(superior_index, not_superior_index), each = length(points))),
value = c(as.vector(table(unlist(variety_analysis[c("variety", "points")]))), rep(variety_analysis$count, times = 2))
)
# Load the required libraries
library(dplyr)
library(networkD3)
# Load your data
wine_data <- read.csv("wine_review.csv")  # Replace with the path to your dataset
# Prepare the data for the Sankey diagram
variety_analysis <- wine_data %>%
group_by(variety, points) %>%
summarise(count = n(),
superior_count = sum(superior_rating, na.rm = TRUE),
.groups = 'drop')
# Create nodes for Sankey Diagram
varieties <- unique(variety_analysis$variety)
points <- as.character(unique(variety_analysis$points))
labels <- c(varieties, points, "Not Superior", "Superior")
nodes <- data.frame(name = labels)
# Map indices for source and target
variety_indices <- match(varieties, labels) - 1
points_indices <- match(points, labels) - 1
superior_index <- which(labels == "Superior") - 1
not_superior_index <- which(labels == "Not Superior") - 1
# Create links for Sankey Diagram
links <- data.frame(
source = c(rep(variety_indices, each = length(points_indices)), rep(points_indices, each = 2)),
target = c(rep(points_indices, times = length(variety_indices)), rep(c(superior_index, not_superior_index), each = length(points))),
value = c(as.vector(table(unlist(variety_analysis[c("variety", "points")]))), rep(variety_analysis$count, times = 2))
)
# Install and load necessary packages
if (!require("dplyr")) install.packages("dplyr")
if (!require("networkD3")) install.packages("networkD3")
library(dplyr)
library(networkD3)
# Load data
wine_data <- read.csv("path_to_your_file.csv")  # Update this path to your dataset location
# Load data
wine_data <- read.csv("wine_review.csv")  # Update this path to your dataset location
# Prepare data for Sankey diagram
variety_analysis <- wine_data %>%
group_by(variety, points) %>%
summarise(count = n(),
superior_count = sum(superior_rating, na.rm = TRUE),
.groups = 'drop')
# Define nodes
nodes <- data.frame(name = c(as.character(variety_analysis$variety),
as.character(variety_analysis$points),
"Not Superior", "Superior"))
# Map source and target indices
variety_to_point_links <- variety_analysis %>%
transmute(source = match(variety, nodes$name) - 1,
target = match(as.character(points), nodes$name) - 1,
value = count)
point_to_rating_links <- variety_analysis %>%
mutate(target = ifelse(superior_count > 0, match("Superior", nodes$name) - 1, match("Not Superior", nodes$name) - 1)) %>%
transmute(source = match(as.character(points), nodes$name) - 1,
target = target,
value = count)
links <- rbind(variety_to_point_links, point_to_rating_links)
# Check dimensions and data
print(nrow(links))
print(head(links))
# Create Sankey diagram
sankey <- sankeyNetwork(Links = links, Nodes = nodes, Source = "source", Target = "target", Value = "value", NodeID = "name",
units = "Tastings", fontSize = 12, nodeWidth = 30)
print(sankey)
